/*
 * -------------------------------------------------
 *  Nextflow config file for running at Garvan SGE
 * -------------------------------------------------
 * Use as follows:
 * nextflow run wescnv -profile garvan
 */

params {
  config_profile_name = 'Garvan profile'
  config_profile_description = 'Parameters to enable running on Garvan SGE'
  max_cpus = 8
  max_memory = 32.GB
  max_time = 24.h
}

env {
  ref_fasta = "\${TMPDIR}/Homo_sapiens_assembly38.fasta"
  ref_fasta_index = "\${TMPDIR}/Homo_sapiens_assembly38.fasta.fai"
  target_bed = "\${TMPDIR}/gencode.v38.AUTO-ALL-EXONS-1TPG-MERGED-50bp_MS-GC.GC5-DF-SD.bed"
}

executor {
  queueSize = 200
  pollInterval = '60s'
  submitRateLimit = '30/1min'
}

cleanup = false

docker {
  enabled=false
}

singularity {
      enabled = true
      runOptions = '--bind "\$TMPDIR" --bind "/share/" --bind "/paella/CRAMPipeline/"'
      cacheDir = "/share/ClusterShare/software/contrib/jossch/singularity_images/"
}

process {
    executor = 'sge'
    penv = 'smp'
    queue = 'short.q'
    errorStrategy = 'finish'
    maxRetries = 2
    scratch = true
    stageInMode = 'copy'
    stageOutMode = 'rsync'
    // Solution for clusterOptions comes from here: https://github.com/nextflow-io/nextflow/issues/332 + personal toMega conversion
    clusterOptions = { "-S /bin/bash -V -j y -o output.log -l h_vmem=${task.memory.toGiga()}G,virtual_free=${task.memory.toGiga()}G" }

    withName: cramCoverage {
      container = '/share/ClusterShare/software/contrib/jossch/singularity_images/mosdepth:0.3.2'
      publishDir = [ "${params.outputDir}/CoverageSummary/", mode: "${saveMode}" ,pattern: "*mosdepth.summary.txt", overwrite: false ]
    }

    withName: cramCounts {
      container = '/share/ClusterShare/software/contrib/jossch/singularity_images/hts_nim_tools:0.2.0'
    }

    withLabel: bamTasks {
      beforeScript =
      """cp /share/ScratchGeneral/jossch/reference/gatk/hg38/Homo_sapiens_assembly38.fasta* \${TMPDIR}
      cp /share/ScratchGeneral/jossch/annotations/hg38/gencode.v38.AUTO-ALL-EXONS-1TPG-MERGED-50bp_MS-GC.GC5-DF-SD.bed \${TMPDIR}"""

      cpus = { check_max( 2, 'cpus' ) }
      memory = { check_max( 4.GB * task.cpus, 'memory' ) }
      clusterOptions = { "-S /bin/bash -V -j yes -l h_vmem=${task.memory.toGiga()}G,mem_requested=${task.memory.toGiga()}G,tmp_requested=${(input_cram.toGiga() * 3)}G,tmp_free=${(input_cram.toGiga() * 3)}G" }
    }
}


